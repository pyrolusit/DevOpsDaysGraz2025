name: Release Pipeline

on:
  push: {}

jobs:
  release-pipeline:
    name: Release Pipeline\
    runs-on: windows-latest
    env:
      CERT_NAME: cert.pfx
    steps:
      - uses: actions/checkout@v4

      - name: Setup Dotnet tools
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Run Core Test
        run: dotnet test .\src\DevOpsDaysTasks.Core.Tests

      - name: Run Integrations Test
        run: dotnet test .\src\DevOpsDaysTasks.IntegrationTests
      # hard coded release version
      - name: Build Release Version
        run: dotnet publish -c Release src\DevOpsDaysTasks.UI\ -o DevOpsDaysTasks /p:Version=1.2 /p:VersionName=DevOpsDays
      # should not use workshop folder
      - name: Copy workshop material
        run: |
          mkdir DevOpsDaysTasks/Templates
          cp workshop_material/default-tasks.xml DevOpsDaysTasks/Templates/

      - name: Copy help pdf
        run: |
          mkdir DevOpsDaysTasks/Help
          cp workshop_material/default-tasks.xml DevOpsDaysTasks/Help
      # cleartext cert and pw
      - name: Create cert
        run:  | 
         $base64 = "${{ secrets.SIGN_CERTIFICATE_PFX_BASE64 }}"
         $content = [System.Convert]::FromBase64String($base64)
         Set-Content ${{ env.CERT_NAME }} -Value $content -AsByteStream

      - name: Sign Release
        run: .\scripts\sign.ps1 .\DevOpsDaysTasks\DevOpsDaysTasks.UI.exe -PfxFile ${{ env.CERT_NAME }} -PfxPassword Password
        
      # no release
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          path: DevOpsDaysTasks
          name: DevOpsDaysTasks
